server:
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
spring:
  application:
    # 应用程序名称，用于标识服务，通常在日志和监控中使用
    name: springboot-template
  # 激活的环境配置文件
  profiles:
    # 指定默认的激活环境为 dev（开发环境）
    active: dev
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    # todo 取消注释开启分布式 session（须先配置 Redis）
    # store-type: redis
    # 30 天过期
    timeout: 2592000
  # 安全配置
  security:
    user:
      name: admin       # 自定义用户名
      password: admin123 # 自定义密码

# Redis 配置
# todo 需替换配置，然后取消注释
#  redis:
#    database: 1
#    host: localhost
#    port: 6379
#    timeout: 5000
#    password: 123456
# Elasticsearch 配置
# todo 需替换配置，然后取消注释
#  elasticsearch:
#    uris: http://localhost:9200
#    username: root
#    password: 123456

mybatis-plus:
  configuration:
    # 是否将数据库字段的下划线命名风格自动映射为驼峰命名法
    # 例如：数据库字段 `user_name` 会映射为实体类中的 `userName` 属性
    # 设置为 false 则不会自动转换，需要手动映射字段
    map-underscore-to-camel-case: false

    # 配置 MyBatis 日志实现类，用于输出执行的 SQL 和调试信息
    # 使用 `org.apache.ibatis.logging.stdout.StdOutImpl` 将日志输出到控制台
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

  global-config:
    db-config:
      # 全局逻辑删除字段名称（对应实体类中的字段名）
      # 例如：在实体类中设置 `private Integer isDelete`，MyBatis-Plus 会使用该字段来标记逻辑删除
      logic-delete-field: isDelete

      # 标记逻辑删除的数据的值（默认为 1 表示已删除）
      # 当执行删除操作时，SQL 中会自动将逻辑删除字段的值更新为此配置值，而不是直接物理删除记录
      logic-delete-value: 1

      # 标记逻辑未删除的数据的值（默认为 0 表示未删除）
      # 当查询时，SQL 会自动过滤出逻辑未删除的数据（即逻辑删除字段的值等于该配置值的数据）
      logic-not-delete-value: 0
# 接口文档配置（Knife4j）: /api/doc.html
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.zephyr.springboottemplate.controller
wx:
  # 微信相关配置
  # 包含微信公众号配置 (mp) 和微信开放平台配置 (open)

  # 微信公众平台配置
  mp:
    # 微信公众平台开发者配置的令牌，用于验证消息来源的合法性
    token: xxx

    # 消息加解密密钥，用于加密和解密消息体内容
    aesKey: xxx

    # 微信公众平台的 AppID，唯一标识公众号
    appId: xxx

    # 微信公众平台的 AppSecret，配合 AppID 使用，用于接口调用凭据的获取
    secret: xxx

    # 配置存储相关设置，指定如何存储微信 SDK 使用的配置数据
    config-storage:
      # HTTP 客户端类型，指定 SDK 内部调用接口时使用的 HTTP 客户端
      http-client-type: HttpClient

      # 配置存储的键前缀，用于在 Redis 等存储中区分不同的键
      key-prefix: wx

      # Redis 配置，指定存储使用 Redis 时的主机和端口
      redis:
        # Redis 服务的主机地址
        host: 127.0.0.1

        # Redis 服务的端口号
        port: 6379

      # 配置存储类型，支持以下几种类型：
      # - Memory：内存存储，仅适用于单节点环境
      # - Redis：使用 Redis 存储，适用于分布式环境
      type: Memory

  # 微信开放平台配置
  open:
    # 微信开放平台的 AppID，唯一标识应用
    appId: xxx

    # 微信开放平台的 AppSecret，配合 AppID 使用，用于接口调用凭据的获取
    appSecret: xxx

# 对象存储配置
# 用于配置对象存储服务（例如腾讯云 COS），支持上传文件、图片等资源。
# 需替换配置项中的 "xxx" 为实际的参数值。
cos: # 顶级配置项，表示对象存储相关配置
  client: # 客户端配置
    # 访问密钥 Access Key，用于身份验证
    # 在对象存储服务的控制台可以获取，类似于用户名的功能。
    accessKey: xxx

    # 密钥 Secret Key，与 Access Key 搭配使用
    # 用于签名请求，保证请求的合法性，类似于密码的功能。
    secretKey: xxx

    # 区域 Region，指定对象存储服务所在的数据中心
    # 不同区域有不同的访问速度，可以根据应用部署的地理位置选择最近的区域。
    # 示例值：ap-guangzhou 表示广州区域
    region: xxx

    # 存储桶名称 Bucket，指定对象存储的逻辑容器
    # 每个存储桶下可以存放文件对象，需要唯一标识。
    # 示例值：my-app-bucket
    bucket: xxx